name: Sync GitHub to Trello

on:
  issues:
    types: [opened, edited, closed, reopened]
  pull_request:
    types: [opened, closed, reopened, edited]

jobs:
  sync_to_trello:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Handle Trello Cards
        env:
          TRELLO_API_KEY: ${{ secrets.TRELLO_API_KEY }}
          TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
          BOARD_ID: ${{ secrets.TRELLO_BOARD_ID }}
          BACKLOG_LIST_ID: ${{ secrets.BACKLOG_LIST_ID }}
          READY_LIST_ID: ${{ secrets.READY_LIST_ID }}
          IN_PROGRESS_LIST_ID: ${{ secrets.IN_PROGRESS_LIST_ID }}
          IN_REVIEW_LIST_ID: ${{ secrets.IN_REVIEW_LIST_ID }}
          DONE_LIST_ID: ${{ secrets.DONE_LIST_ID }}
        run: |
          # Paso 1: Obtener el √∫ltimo n√∫mero de tarjeta en Trello
          LAST_CARD_NUMBER=$(curl -s "https://api.trello.com/1/boards/$BOARD_ID/cards?key=$TRELLO_API_KEY&token=$TRELLO_TOKEN" \
            | jq -r 'map(select(.name | test("^#[0-9]+:")) | .name) | max_by(. | scan("^#([0-9]+):" ) | .[0] | tonumber) | scan("^#([0-9]+):" ) | .[0]')

          # Paso 2: Si no hay ninguna tarjeta en Trello, empezamos desde #1
          if [ -z "$LAST_CARD_NUMBER" ]; then
            NEW_CARD_NUMBER=1
          else
            NEW_CARD_NUMBER=$((LAST_CARD_NUMBER + 1))  # Incrementar el n√∫mero
          fi

          # Paso 3: Crear el nombre con el nuevo n√∫mero
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"
          CARD_NAME="#${NEW_CARD_NUMBER}: ${ISSUE_TITLE}"

          echo "üìù Nueva tarjeta a crear: $CARD_NAME"

          # Paso 4: Verificar si la tarjeta ya existe, si no la creamos
          CARD_ID=$(curl -s "https://api.trello.com/1/boards/$BOARD_ID/cards?key=$TRELLO_API_KEY&token=$TRELLO_TOKEN" \
            | jq -r --arg CARD_NAME "$CARD_NAME" '.[] | select(.name == $CARD_NAME) | .id')

          if [[ "$ISSUE_ACTION" == "opened" && -z "$CARD_ID" ]]; then
            echo "üöÄ Creando nueva tarjeta en Trello..."
            curl -X POST "https://api.trello.com/1/cards" \
              --data-urlencode "key=$TRELLO_API_KEY" \
              --data-urlencode "token=$TRELLO_TOKEN" \
              --data-urlencode "idList=$BACKLOG_LIST_ID" \
              --data-urlencode "name=$CARD_NAME" \
              --data-urlencode "desc=$ISSUE_BODY"

          # Si la tarjeta ya existe, la movemos a la lista correcta
          elif [[ -n "$CARD_ID" ]]; then
            case "$ISSUE_STATE" in
              "open") LIST_ID=$READY_LIST_ID ;;
              "in progress") LIST_ID=$IN_PROGRESS_LIST_ID ;;
              "review requested") LIST_ID=$IN_REVIEW_LIST_ID ;;
              "closed") LIST_ID=$DONE_LIST_ID ;;
              *) LIST_ID=$BACKLOG_LIST_ID ;;
            esac

            echo "üîÑ Moviendo tarjeta existente a nueva lista: $LIST_ID"
            curl -X PUT "https://api.trello.com/1/cards/$CARD_ID" \
              --data-urlencode "key=$TRELLO_API_KEY" \
              --data-urlencode "token=$TRELLO_TOKEN" \
              --data-urlencode "idList=$LIST_ID"
          fi
